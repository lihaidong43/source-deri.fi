// this file is generated by script, don't modify it !!!
import { ContractBase } from '../contract_base.js'
import { deleteIndexedKey } from '../../utils/lang.js'
import { symbolManagerImplementationAbi } from '../abi/symbolManagerImplementationAbi.js'

export class SymbolManagerImplementation extends ContractBase {
  // init
  constructor(chainId, contractAddress, opts = {}) {
    super(chainId, contractAddress, symbolManagerImplementationAbi)
    // for pool use
    this.initialBlock = opts.initialBlock || ""
  }

  // query
  async activeSymbols(pTokenId, index) {
    const res = await this._call('activeSymbols', [pTokenId, index])
    return deleteIndexedKey(res)
  }
  async admin() {
    const res = await this._call('admin', [])
    return deleteIndexedKey(res)
  }
   async getActiveSymbols(pTokenId) {
     const res = await this._call('getActiveSymbols', [pTokenId])
     return deleteIndexedKey(res)
   }
   async getSymbolsLength() {
     const res = await this._call('getSymbolsLength', [])
     return deleteIndexedKey(res)
   }
  async implementation() {
    const res = await this._call('implementation', [])
    return deleteIndexedKey(res)
  }
  async indexedSymbols(id) {
    const res = await this._call('indexedSymbols', [id])
    return deleteIndexedKey(res)
  }
  async initialMarginRequired() {
    const res = await this._call('initialMarginRequired', [])
    return deleteIndexedKey(res)
  }
  async nameId() {
    const res = await this._call('nameId', [])
    return deleteIndexedKey(res)
  }
  async pool() {
    const res = await this._call('pool', [])
    return deleteIndexedKey(res)
  }
  async symbols(symbolId) {
    const res = await this._call('symbols', [symbolId])
    return deleteIndexedKey(res)
  }
  async versionId() {
    const res = await this._call('versionId', [])
    return deleteIndexedKey(res)
  }

  // tx
  //  async addSymbol(accountAddress, symbol) {
  //    return await this._transact('addSymbol', [symbol], accountAddress)
  //  }
  //  async removeSymbol(accountAddress, symbolId) {
  //    return await this._transact('removeSymbol', [symbolId], accountAddress)
  //  }
  //  async setAdmin(accountAddress, newAdmin) {
  //    return await this._transact('setAdmin', [newAdmin], accountAddress)
  //  }
  //  async settleSymbolsOnAddLiquidity(accountAddress, liquidity) {
  //    return await this._transact('settleSymbolsOnAddLiquidity', [liquidity], accountAddress)
  //  }
  //  async settleSymbolsOnLiquidate(accountAddress, pTokenId, liquidity) {
  //    return await this._transact('settleSymbolsOnLiquidate', [pTokenId, liquidity], accountAddress)
  //  }
  //  async settleSymbolsOnRemoveLiquidity(accountAddress, liquidity, removedLiquidity) {
  //    return await this._transact('settleSymbolsOnRemoveLiquidity', [liquidity, removedLiquidity], accountAddress)
  //  }
  //  async settleSymbolsOnRemoveMargin(accountAddress, pTokenId, liquidity) {
  //    return await this._transact('settleSymbolsOnRemoveMargin', [pTokenId, liquidity], accountAddress)
  //  }
  //  async settleSymbolsOnTrade(accountAddress, pTokenId, symbolId, tradeVolume, liquidity) {
  //    return await this._transact('settleSymbolsOnTrade', [pTokenId, symbolId, tradeVolume, liquidity], accountAddress)
  //  }

}